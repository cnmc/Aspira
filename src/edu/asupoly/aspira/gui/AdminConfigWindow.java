package edu.asupoly.aspira.gui;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;

import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Richard
 */
@SuppressWarnings("serial")
public class AdminConfigWindow extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public AdminConfigWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        PatientPanel = new javax.swing.JPanel();
        pidLabel = new javax.swing.JLabel();
        pidField = new javax.swing.JTextField();
        rpdLabel = new javax.swing.JLabel();
        readOneTimeLabel = new javax.swing.JLabel();
        read1TimeField = new javax.swing.JTextField();
        read1TimeCB = new javax.swing.JComboBox();
        readTwoTimeLabel = new javax.swing.JLabel();
        readTwoTimeField = new javax.swing.JTextField();
        read2TimeCB = new javax.swing.JComboBox();
        read3TimeLabel = new javax.swing.JLabel();
        read3TimeField = new javax.swing.JTextField();
        read3TimeCB = new javax.swing.JComboBox();
        savePatientInfo = new javax.swing.JButton();
        cancelPatientInfo = new javax.swing.JButton();
        configPanel = new javax.swing.JPanel();
        alarmTypeLabel = new javax.swing.JLabel();
        soundTypeCheck = new javax.swing.JCheckBox();
        blinkTypeCheck = new javax.swing.JCheckBox();
        alarmSoundPromptLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        alarmTimeUnitsLabel = new javax.swing.JLabel();
        urlToPushLabel = new javax.swing.JLabel();
        urlField = new javax.swing.JTextField();
        testURLButton = new javax.swing.JButton();
        ProvisioningLabel = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();
        endDateLabel = new javax.swing.JLabel();
        rewardLabel = new javax.swing.JLabel();
        rewardField = new javax.swing.JTextField();
        spiroRangeLabel = new javax.swing.JLabel();
        lowerTextLabel = new javax.swing.JLabel();
        lowerRangeField = new javax.swing.JTextField();
        upperRangeLabel = new javax.swing.JLabel();
        upperRangeField = new javax.swing.JTextField();
        aqZonesLabel = new javax.swing.JLabel();
        yellowQualityLabel = new javax.swing.JLabel();
        yellowQualityField = new javax.swing.JTextField();
        redQualityLabel = new javax.swing.JLabel();
        redQualityField = new javax.swing.JTextField();
        pollingTimeLabel = new javax.swing.JLabel();
        pollingTimeField = new javax.swing.JTextField();
        pollingTimeUnitLabel = new javax.swing.JLabel();
        startDateField = new javax.swing.JTextField();
        endDateField = new javax.swing.JTextField();
        saveConfigButton = new javax.swing.JButton();
        resetConfigButton = new javax.swing.JButton();
        logPanel = new javax.swing.JPanel();
        lastSpiroLogHeader = new javax.swing.JLabel();
        lastSpiroLogArea = new javax.swing.JLabel();
        spiroDateTimeHeader = new javax.swing.JLabel();
        spiroDateTimeArea = new javax.swing.JLabel();
        spiroServerPushHeader = new javax.swing.JLabel();
        spiroPushArea = new javax.swing.JLabel();
        spiroPushButton = new javax.swing.JButton();
        spiroExportedHeader = new javax.swing.JLabel();
        spiroExportButton = new javax.swing.JButton();
        spiroExportedArea = new javax.swing.JLabel();
        acExportedArea = new javax.swing.JLabel();
        acExportButton = new javax.swing.JButton();
        lastACLogArea = new javax.swing.JLabel();
        lastACLogHeader = new javax.swing.JLabel();
        acPushButton = new javax.swing.JButton();
        acExportedHeader = new javax.swing.JLabel();
        acPushHeader = new javax.swing.JLabel();
        acPushArea = new javax.swing.JLabel();
        acDateTimeHeader = new javax.swing.JLabel();
        acDateTimeArea = new javax.swing.JLabel();
        userExportButton = new javax.swing.JButton();
        userDateTimeArea = new javax.swing.JLabel();
        userExportArea = new javax.swing.JLabel();
        userInterLogArea = new javax.swing.JLabel();
        userInteractionLogHeader = new javax.swing.JLabel();
        userPushButton = new javax.swing.JButton();
        userExportHeader = new javax.swing.JLabel();
        userPushHeader = new javax.swing.JLabel();
        userPushArea = new javax.swing.JLabel();
        userDateTimeHeader = new javax.swing.JLabel();
        MedicationPanel = new javax.swing.JPanel();
        medPannelSaveButton = new javax.swing.JButton();
        medPanelClearButton = new javax.swing.JButton();
        albuInhaleCB = new javax.swing.JCheckBox();
        albuNebCB = new javax.swing.JCheckBox();
        floDiskCB = new javax.swing.JCheckBox();
        floInhaleCB = new javax.swing.JCheckBox();
        qvarCB = new javax.swing.JCheckBox();
        advairDiskCB = new javax.swing.JCheckBox();
        advairInhaleCB = new javax.swing.JCheckBox();
        budesonideCB = new javax.swing.JCheckBox();
        pulmiTwistCB = new javax.swing.JCheckBox();
        otherMedCheckbox = new javax.swing.JCheckBox();
        singulairCB = new javax.swing.JCheckBox();
        otherMedField = new javax.swing.JTextField();
        pulmiNebCB = new javax.swing.JCheckBox();
        scheduleList = new ArrayList<MedicationSchedule>();
        
        albuInhaleCB.addItemListener(new CheckBoxListener());
        albuNebCB.addItemListener(new CheckBoxListener());
        floDiskCB.addItemListener(new CheckBoxListener());
        floInhaleCB.addItemListener(new CheckBoxListener());
        qvarCB.addItemListener(new CheckBoxListener());
        advairDiskCB.addItemListener(new CheckBoxListener());
        advairInhaleCB.addItemListener(new CheckBoxListener());
        budesonideCB.addItemListener(new CheckBoxListener());
        pulmiTwistCB.addItemListener(new CheckBoxListener());
        singulairCB.addItemListener(new CheckBoxListener());
        otherMedCheckbox.addItemListener(new CheckBoxListener());
        pulmiNebCB.addItemListener(new CheckBoxListener());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Administrator Config Window"); // NOI18N

        pidLabel.setText("Patient ID: ");

        pidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidFieldActionPerformed(evt);
            }
        });

        rpdLabel.setText("Readings per day: 3");

        readOneTimeLabel.setText("Reading 1 Time:");

        read1TimeField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        read1TimeField.setText("8:00");
        read1TimeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read1TimeFieldActionPerformed(evt);
            }
        });

        read1TimeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));

        readTwoTimeLabel.setText("Reading 2 Time:");

        readTwoTimeField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        readTwoTimeField.setText("4:00");
        readTwoTimeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readTwoTimeFieldActionPerformed(evt);
            }
        });

        read2TimeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));
        read2TimeCB.setSelectedIndex(1);
        read2TimeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read2TimeCBActionPerformed(evt);
            }
        });

        read3TimeLabel.setText("Reading 3 Time:");

        read3TimeField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        read3TimeField.setText("8:00");
        read3TimeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read3TimeFieldActionPerformed(evt);
            }
        });

        read3TimeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));
        read3TimeCB.setSelectedIndex(1);
        read3TimeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read3TimeCBActionPerformed(evt);
            }
        });

        savePatientInfo.setText("Save");
        savePatientInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePatientInfoActionPerformed(evt);
            }
        });

        cancelPatientInfo.setText("Cancel");

        javax.swing.GroupLayout PatientPanelLayout = new javax.swing.GroupLayout(PatientPanel);
        PatientPanel.setLayout(PatientPanelLayout);
        PatientPanelLayout.setHorizontalGroup(
            PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientPanelLayout.createSequentialGroup()
                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(savePatientInfo)
                    .addGroup(PatientPanelLayout.createSequentialGroup()
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PatientPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PatientPanelLayout.createSequentialGroup()
                                        .addComponent(pidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(pidField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(rpdLabel)))
                            .addGroup(PatientPanelLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(readOneTimeLabel)
                                    .addComponent(readTwoTimeLabel)
                                    .addComponent(read3TimeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(readTwoTimeField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(read1TimeField)
                                    .addComponent(read3TimeField, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(read1TimeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(read2TimeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(read3TimeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelPatientInfo)
                .addContainerGap(353, Short.MAX_VALUE))
        );
        PatientPanelLayout.setVerticalGroup(
            PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pidField))
                .addGap(18, 18, 18)
                .addComponent(rpdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(readOneTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(read1TimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(read1TimeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(read2TimeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readTwoTimeField)
                    .addComponent(readTwoTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(read3TimeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(read3TimeField)
                    .addComponent(read3TimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE)
                .addGroup(PatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(savePatientInfo)
                    .addComponent(cancelPatientInfo))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Patient", PatientPanel);

        alarmTypeLabel.setText("Alarm Type: ");

        soundTypeCheck.setSelected(true);
        soundTypeCheck.setText("Sound");

        blinkTypeCheck.setSelected(true);
        blinkTypeCheck.setText("Blink");
        blinkTypeCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blinkTypeCheckMouseClicked(evt);
            }
        });
        blinkTypeCheck.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blinkTypeCheckStateChanged(evt);
            }
        });

        alarmSoundPromptLabel.setText("How long alarm sounds: ");

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("3");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        alarmTimeUnitsLabel.setText("minutes");

        urlToPushLabel.setText("URL to push readings: ");

        urlField.setText("http://ineedtogetthedefaultfromDrgary.com");

        testURLButton.setText("Test");

        ProvisioningLabel.setText("Provisioning: ");

        startDateLabel.setText("Start Date:");

        endDateLabel.setText("End Date: ");

        rewardLabel.setText("Reward Steps: ");

        rewardField.setText("8");

        spiroRangeLabel.setText("Spirometer range: ");

        lowerTextLabel.setText("Lower");

        upperRangeLabel.setText("Upper");

        aqZonesLabel.setText("Air Quality Zones: ");

        yellowQualityLabel.setText("Yellow");

        redQualityLabel.setText("Red");

        pollingTimeLabel.setText("Air Quality Polling: ");

        pollingTimeField.setText(" 5");

        pollingTimeUnitLabel.setText("minutes");

        startDateField.setText("MM/DD/YY");
        startDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateFieldActionPerformed(evt);
            }
        });

        endDateField.setText("MM/DD/YY");

        saveConfigButton.setText("Save");

        resetConfigButton.setText("Cancel");

        javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(configPanelLayout.createSequentialGroup()
                            .addComponent(alarmSoundPromptLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(alarmTimeUnitsLabel))
                        .addGroup(configPanelLayout.createSequentialGroup()
                            .addComponent(alarmTypeLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(soundTypeCheck)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(blinkTypeCheck)))
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addComponent(urlToPushLabel)
                        .addGap(18, 18, 18)
                        .addComponent(urlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(testURLButton))
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addComponent(rewardLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rewardField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, configPanelLayout.createSequentialGroup()
                                .addComponent(aqZonesLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yellowQualityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yellowQualityField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, configPanelLayout.createSequentialGroup()
                                .addComponent(spiroRangeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lowerTextLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lowerRangeField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(upperRangeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(upperRangeField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(redQualityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(redQualityField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(saveConfigButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetConfigButton))))
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addComponent(pollingTimeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pollingTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pollingTimeUnitLabel))
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(endDateLabel)
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(ProvisioningLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(startDateLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(226, Short.MAX_VALUE))
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alarmTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(soundTypeCheck)
                    .addComponent(blinkTypeCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alarmSoundPromptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alarmTimeUnitsLabel))
                .addGap(18, 18, 18)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(urlToPushLabel)
                    .addComponent(urlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testURLButton))
                .addGap(18, 18, 18)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProvisioningLabel)
                    .addComponent(startDateLabel)
                    .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endDateLabel)
                    .addComponent(endDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rewardLabel)
                    .addComponent(rewardField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spiroRangeLabel)
                    .addComponent(lowerTextLabel)
                    .addComponent(lowerRangeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upperRangeLabel)
                    .addComponent(upperRangeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aqZonesLabel)
                    .addComponent(yellowQualityLabel)
                    .addComponent(yellowQualityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(redQualityLabel)
                    .addComponent(redQualityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pollingTimeLabel)
                    .addComponent(pollingTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pollingTimeUnitLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveConfigButton)
                    .addComponent(resetConfigButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("App Config", configPanel);

        lastSpiroLogHeader.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lastSpiroLogHeader.setText("Last spirometer log:");

        spiroDateTimeHeader.setText("Date/time");

        spiroServerPushHeader.setText("Push to server");

        spiroPushButton.setText("push");

        spiroExportedHeader.setText("Exported");

        spiroExportButton.setText("export");

        acExportButton.setText("export");

        lastACLogHeader.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lastACLogHeader.setText("Last AC log:");

        acPushButton.setText("push");

        acExportedHeader.setText("Exported");

        acPushHeader.setText("Push to server");

        acDateTimeHeader.setText("Date/time");

        userExportButton.setText("export");

        userInteractionLogHeader.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        userInteractionLogHeader.setText("User interaction log");

        userPushButton.setText("push");

        userExportHeader.setText("Exported");

        userPushHeader.setText("Push to server");

        userDateTimeHeader.setText("Date/time");

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lastSpiroLogHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastSpiroLogArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastACLogArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastACLogHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(userInterLogArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(userInteractionLogHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(spiroServerPushHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spiroPushArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(spiroDateTimeHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spiroDateTimeArea, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(spiroExportedHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spiroExportedArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(acExportedHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(acExportedArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(acPushHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(acPushArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(acDateTimeHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(acDateTimeArea, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(userDateTimeHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userDateTimeArea, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(userExportHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(userExportArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(logPanelLayout.createSequentialGroup()
                                .addComponent(userPushHeader)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userPushArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spiroPushButton)
                            .addComponent(spiroExportButton)
                            .addComponent(acExportButton)
                            .addComponent(acPushButton)
                            .addComponent(userExportButton)
                            .addComponent(userPushButton))))
                .addContainerGap(427, Short.MAX_VALUE))
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lastSpiroLogHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastSpiroLogArea, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spiroDateTimeHeader)
                    .addComponent(spiroDateTimeArea, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spiroPushArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spiroServerPushHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spiroExportedHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spiroExportedArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(spiroPushButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spiroExportButton)))
                .addGap(18, 18, 18)
                .addComponent(lastACLogHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastACLogArea, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acDateTimeHeader)
                    .addComponent(acDateTimeArea, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(acPushArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(acPushHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(acExportedHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(acExportedArea, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(acPushButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acExportButton)))
                .addGap(18, 18, 18)
                .addComponent(userInteractionLogHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userInterLogArea, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userDateTimeHeader)
                    .addComponent(userDateTimeArea, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userPushArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userPushHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userExportHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userExportArea, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(userPushButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userExportButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Logs", logPanel);

        medPannelSaveButton.setText("Save");

        medPanelClearButton.setText("Clear");

        albuInhaleCB.setText("Albuteral (inhaler)");

        albuNebCB.setText("Albuterol (nebulizer)");

        floDiskCB.setText("Flovent (diskus)");

        floInhaleCB.setText("Flovent (inhaler)");

        qvarCB.setText("Qvar");

        advairDiskCB.setText("Advair (diskus)");

        advairInhaleCB.setText("Advair (inhaler)");

        budesonideCB.setText("Budesonide");

        pulmiTwistCB.setText("Pulmicort (twisthaler)");

        otherMedCheckbox.setText("Other:");

        singulairCB.setText("Singulair");

        otherMedField.setText("Other");

        pulmiNebCB.setText("Pulmicort (nebulizer)");

        javax.swing.GroupLayout MedicationPanelLayout = new javax.swing.GroupLayout(MedicationPanel);
        MedicationPanel.setLayout(MedicationPanelLayout);
        MedicationPanelLayout.setHorizontalGroup(
            MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MedicationPanelLayout.createSequentialGroup()
                .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MedicationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(singulairCB))
                    .addGroup(MedicationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MedicationPanelLayout.createSequentialGroup()
                                .addComponent(albuInhaleCB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(albuNebCB))
                            .addGroup(MedicationPanelLayout.createSequentialGroup()
                                .addComponent(advairDiskCB)
                                .addGap(16, 16, 16)
                                .addComponent(advairInhaleCB)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(floDiskCB)
                            .addComponent(budesonideCB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pulmiTwistCB)
                            .addComponent(floInhaleCB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qvarCB)
                            .addComponent(pulmiNebCB)))
                    .addGroup(MedicationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(otherMedCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(otherMedField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MedicationPanelLayout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(medPannelSaveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(medPanelClearButton)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        MedicationPanelLayout.setVerticalGroup(
            MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MedicationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(albuInhaleCB)
                    .addComponent(albuNebCB)
                    .addComponent(floDiskCB)
                    .addComponent(floInhaleCB)
                    .addComponent(qvarCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(advairDiskCB)
                    .addComponent(advairInhaleCB)
                    .addComponent(budesonideCB)
                    .addComponent(pulmiTwistCB)
                    .addComponent(pulmiNebCB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(singulairCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(otherMedCheckbox)
                    .addComponent(otherMedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 308, Short.MAX_VALUE)
                .addGroup(MedicationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medPannelSaveButton)
                    .addComponent(medPanelClearButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Medication", MedicationPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void savePatientInfoActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void read3TimeCBActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void read3TimeFieldActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void read2TimeCBActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void readTwoTimeFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void read1TimeFieldActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void pidFieldActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void startDateFieldActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void blinkTypeCheckMouseClicked(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void blinkTypeCheckStateChanged(javax.swing.event.ChangeEvent evt) {                                            

    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminConfigWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminConfigWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminConfigWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminConfigWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               thisFrame = new AdminConfigWindow();
               thisFrame.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JPanel MedicationPanel;
    private javax.swing.JPanel PatientPanel;
    private javax.swing.JLabel ProvisioningLabel;
    private javax.swing.JLabel acDateTimeArea;
    private javax.swing.JLabel acDateTimeHeader;
    private javax.swing.JButton acExportButton;
    private javax.swing.JLabel acExportedArea;
    private javax.swing.JLabel acExportedHeader;
    private javax.swing.JLabel acPushArea;
    private javax.swing.JButton acPushButton;
    private javax.swing.JLabel acPushHeader;
    private javax.swing.JCheckBox advairDiskCB;
    private javax.swing.JCheckBox advairInhaleCB;
    private javax.swing.JLabel alarmSoundPromptLabel;
    private javax.swing.JLabel alarmTimeUnitsLabel;
    private javax.swing.JLabel alarmTypeLabel;
    private javax.swing.JCheckBox albuInhaleCB;
    private javax.swing.JCheckBox albuNebCB;
    private javax.swing.JLabel aqZonesLabel;
    private javax.swing.JCheckBox blinkTypeCheck;
    private javax.swing.JCheckBox budesonideCB;
    private javax.swing.JButton cancelPatientInfo;
    private javax.swing.JPanel configPanel;
    private javax.swing.JTextField endDateField;
    private javax.swing.JLabel endDateLabel;
    private javax.swing.JCheckBox floDiskCB;
    private javax.swing.JCheckBox floInhaleCB;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lastACLogArea;
    private javax.swing.JLabel lastACLogHeader;
    private javax.swing.JLabel lastSpiroLogArea;
    private javax.swing.JLabel lastSpiroLogHeader;
    private javax.swing.JPanel logPanel;
    private javax.swing.JTextField lowerRangeField;
    private javax.swing.JLabel lowerTextLabel;
    private javax.swing.JButton medPanelClearButton;
    private javax.swing.JButton medPannelSaveButton;
    private javax.swing.JCheckBox otherMedCheckbox;
    private javax.swing.JTextField otherMedField;
    private javax.swing.JTextField pidField;
    private javax.swing.JLabel pidLabel;
    private javax.swing.JTextField pollingTimeField;
    private javax.swing.JLabel pollingTimeLabel;
    private javax.swing.JLabel pollingTimeUnitLabel;
    private javax.swing.JCheckBox pulmiNebCB;
    private javax.swing.JCheckBox pulmiTwistCB;
    private javax.swing.JCheckBox qvarCB;
    private javax.swing.JComboBox read1TimeCB;
    private javax.swing.JTextField read1TimeField;
    private javax.swing.JComboBox read2TimeCB;
    private javax.swing.JComboBox read3TimeCB;
    private javax.swing.JTextField read3TimeField;
    private javax.swing.JLabel read3TimeLabel;
    private javax.swing.JLabel readOneTimeLabel;
    private javax.swing.JTextField readTwoTimeField;
    private javax.swing.JLabel readTwoTimeLabel;
    private javax.swing.JTextField redQualityField;
    private javax.swing.JLabel redQualityLabel;
    private javax.swing.JButton resetConfigButton;
    private javax.swing.JTextField rewardField;
    private javax.swing.JLabel rewardLabel;
    private javax.swing.JLabel rpdLabel;
    private javax.swing.JButton saveConfigButton;
    private javax.swing.JButton savePatientInfo;
    private javax.swing.JCheckBox singulairCB;
    private javax.swing.JCheckBox soundTypeCheck;
    private javax.swing.JLabel spiroDateTimeArea;
    private javax.swing.JLabel spiroDateTimeHeader;
    private javax.swing.JButton spiroExportButton;
    private javax.swing.JLabel spiroExportedArea;
    private javax.swing.JLabel spiroExportedHeader;
    private javax.swing.JLabel spiroPushArea;
    private javax.swing.JButton spiroPushButton;
    private javax.swing.JLabel spiroRangeLabel;
    private javax.swing.JLabel spiroServerPushHeader;
    private javax.swing.JTextField startDateField;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JButton testURLButton;
    private javax.swing.JTextField upperRangeField;
    private javax.swing.JLabel upperRangeLabel;
    private javax.swing.JTextField urlField;
    private javax.swing.JLabel urlToPushLabel;
    private javax.swing.JLabel userDateTimeArea;
    private javax.swing.JLabel userDateTimeHeader;
    private javax.swing.JLabel userExportArea;
    private javax.swing.JButton userExportButton;
    private javax.swing.JLabel userExportHeader;
    private javax.swing.JLabel userInterLogArea;
    private javax.swing.JLabel userInteractionLogHeader;
    private javax.swing.JLabel userPushArea;
    private javax.swing.JButton userPushButton;
    private javax.swing.JLabel userPushHeader;
    private javax.swing.JTextField yellowQualityField;
    private javax.swing.JLabel yellowQualityLabel;
    private ArrayList<MedicationSchedule> scheduleList;
    private static JFrame thisFrame;
    // End of variables declaration               
    
    private class CheckBoxListener implements ItemListener{
        public void itemStateChanged(ItemEvent e) {
            JCheckBox source = (JCheckBox)e.getSource();
            String[] answers;
            String otherMed;
            if(source.isSelected())
            {
            	if( source != otherMedCheckbox)
            	{
            		MedicineDoseandTimeForm thisForm = new MedicineDoseandTimeForm(thisFrame, source.getText());
            		thisForm.setVisible(true);
            		answers = thisForm.getAnswers();
            		
            		if(answers[0] != null && answers[1]!= null)
            		{
            			scheduleList.add(new MedicationSchedule(source.getText(), answers[1], answers[2]));
            		}
            		else
            			source.setSelected(false);
            	}
            	else
            	{
            		try
            		{
            			otherMed = otherMedField.getText();
            			MedicineDoseandTimeForm thisForm = new MedicineDoseandTimeForm(AdminConfigWindow.this, otherMed);
            			thisForm.setVisible(true);
            			answers = thisForm.getAnswers();
                		
                		if(answers[0] != null && answers[1]!= null)
                		{
                			scheduleList.add(new MedicationSchedule(source.getText(), answers[1], answers[2]));
                			otherMedField.setEnabled(false);
                		}
                		else
                			source.setSelected(false);
                		
            		}
            		catch(NullPointerException npe)
            		{
            			source.setSelected(false);
            		}
            		
            	}
            	
            		
            }
            else
        	{
        		if(source != otherMedCheckbox)
        			scheduleList.remove(new MedicationSchedule(source.getText()));
        		else
        		{
        			scheduleList.remove(new MedicationSchedule(otherMedField.getText()));
        			otherMedField.setEnabled(true);
        		}
        		
        	}
         }
    }
}